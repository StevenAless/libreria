/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package edu.utp.interfaces;

import conexion.ConexionBD;
import java.awt.Color;
import java.awt.HeadlessException;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.DecimalFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import static edu.utp.interfaces.Comprobante.idC;

/**
 *
 * @author Casa
 */
public class AgregarProductos extends javax.swing.JFrame {

    ConexionBD conexion = new ConexionBD();
    Connection cn;
    Statement st;
    ResultSet rs;

    int cantidad;
    float precio, precioT;
    int comboIndex;
    Comprobante parent;

    /**
     * Creates new form AgregrarProductos
     */
    public AgregarProductos(Comprobante comprobante) {
        initComponents();
        mostrarproductos();
        setLocationRelativeTo(null);
        this.setBackground(new Color(0, 0, 0, 0));
        jPanel1.setBackground(new Color(0, 0, 0, 0));
        this.parent = comprobante;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    DecimalFormat df = new DecimalFormat("0.00");

    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        combo_productos = new javax.swing.JComboBox<>();
        txt_cantidad = new javax.swing.JTextField();
        lbl_cantidad = new javax.swing.JLabel();
        txt_precio = new javax.swing.JTextField();
        txt_precioT = new javax.swing.JTextField();
        btn_cancelar = new javax.swing.JLabel();
        btn_agregarP = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        combo_productos.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione su producto" }));
        combo_productos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_productosActionPerformed(evt);
            }
        });
        jPanel1.add(combo_productos, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, 270, 50));

        txt_cantidad.setBorder(null);
        txt_cantidad.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_cantidadKeyReleased(evt);
            }
        });
        jPanel1.add(txt_cantidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 220, 80, 30));

        lbl_cantidad.setText(" ");
        jPanel1.add(lbl_cantidad, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 184, 20, 20));

        txt_precio.setBorder(null);
        jPanel1.add(txt_precio, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 220, 120, 30));

        txt_precioT.setBorder(null);
        jPanel1.add(txt_precioT, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 220, 140, 30));

        btn_cancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/Comprobante/Boton_cancelar.png"))); // NOI18N
        btn_cancelar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_cancelarMouseClicked(evt);
            }
        });
        jPanel1.add(btn_cancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 310, -1, -1));

        btn_agregarP.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/Comprobante/Boton_guardar.png"))); // NOI18N
        btn_agregarP.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btn_agregarPMouseClicked(evt);
            }
        });
        jPanel1.add(btn_agregarP, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 310, -1, -1));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/Comprobante/AgregarProduct.png"))); // NOI18N
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 710, 400));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 710, 400));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void combo_productosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_productosActionPerformed
        // TODO add your handling code here:
        txt_cantidad.setText("" + 1);
        llenarprecio();
    }//GEN-LAST:event_combo_productosActionPerformed

    private void txt_cantidadKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_cantidadKeyReleased
        // TODO add your handling code here:
        float ptotal = Float.parseFloat((String) txt_cantidad.getText()) * Float.parseFloat((String) txt_precio.getText());
        txt_precioT.setText("" + df.format(ptotal));

    }//GEN-LAST:event_txt_cantidadKeyReleased

    private void btn_agregarPMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_agregarPMouseClicked
        // TODO add your handling code here:
         agregar();
        this.parent.listar();
    }//GEN-LAST:event_btn_agregarPMouseClicked

    private void btn_cancelarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btn_cancelarMouseClicked
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_btn_cancelarMouseClicked

    void llenarprecio() {

        int combo = combo_productos.getSelectedIndex();
        String sql = "select stock, precio_venta from productos where id=" + combo;

        try {
            cn = conexion.conectar();
            st = cn.createStatement();
            rs = st.executeQuery(sql);
            Object[] productos = new Object[2];

            while (rs.next()) {
                productos[0] = rs.getString("stock");
                productos[1] = rs.getString("precio_venta");
            }
            lbl_cantidad.setText(":" + productos[0]);
            txt_precio.setText("" + productos[1]);
            float ptotal = Float.parseFloat((String) txt_cantidad.getText()) * Float.parseFloat((String) productos[1]);
            txt_precioT.setText("" + df.format(ptotal));
            cn.close();

        } catch (SQLException e) {

            System.out.println("error: " + e.getMessage());
        }
        System.out.println("index " + combo);

    }

    void mostrarproductos() {
        String sql = "Select nombre from productos";
        cn = conexion.conectar();
        try {
            //combo_productos.addItem("Seleccionar producto");
            st = cn.createStatement();
            ResultSet rs = st.executeQuery(sql);
            while (rs.next()) {
                combo_productos.addItem(rs.getString("nombre")); //nombre de la cabecera tabla pa mostrar
            }

        } catch (SQLException ex) {
            Logger.getLogger(AgregarProductos.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    void agregar() {

        comboIndex = combo_productos.getSelectedIndex();
        cantidad = Integer.parseInt(txt_cantidad.getText());
        precio = Float.parseFloat(txt_precio.getText());
        precioT = Float.parseFloat(txt_precioT.getText());
        int identificador = idC;

        if (txt_cantidad.getText().length() == 0 || txt_precio.getText().length() == 0 || txt_precioT.getText().length() == 0) {
            JOptionPane.showMessageDialog(null, "Ingrese los campos obligatorios");
            //limpiartabla();
        } else {
            try {
                Integer stock = Integer.valueOf(lbl_cantidad.getText().split(":")[1].trim());
                cn = conexion.conectar();
                st = cn.createStatement();
                System.err.println("comboIndex: " + comboIndex);
                
                System.err.println("stock: " + stock);
                System.err.println("cantidad: " + cantidad);

                if (stock > 0 && cantidad <= stock) {
                    String sql = "insert into carrito (id,identificador,cantidad,precio,precioT)"
                            + "values('" + comboIndex + "','" + identificador + "','" + cantidad + "','" + precio + "','" + precioT + "')";

                    st.executeUpdate(sql);

                    stock = stock - cantidad;
                    String sqlRestaStock = "UPDATE productos SET stock=" + stock + " WHERE id =" + comboIndex;
                    st.executeUpdate(sqlRestaStock);
                    
                    JOptionPane.showMessageDialog(null, "Producto Agregado");
                    llenarprecio();
                    
                } else {
                    JOptionPane.showMessageDialog(this, "Stock no disponible");
                }
                cn.close();
            } catch (HeadlessException | SQLException e) {
                e.printStackTrace();
                System.out.println("Error");
            }
        }

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel btn_agregarP;
    private javax.swing.JLabel btn_cancelar;
    private javax.swing.JComboBox<String> combo_productos;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lbl_cantidad;
    private javax.swing.JTextField txt_cantidad;
    private javax.swing.JTextField txt_precio;
    private javax.swing.JTextField txt_precioT;
    // End of variables declaration//GEN-END:variables
}
